# Generated by Django 4.2.3 on 2023-07-28 16:53

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_comment', models.TextField(default='Комментарий')),
                ('time_in', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Заголовок', max_length=50)),
                ('author', models.CharField(default='Автор', max_length=50)),
                ('text', ckeditor.fields.RichTextField(verbose_name='Содержание')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Танк', 'Танк'), ('Хил', 'Хил'), ('ДД', 'ДД'), ('Гилдмастер', 'Гилдмастер'), ('Квестгивер', 'Квестгивер'), ('Кузнец', 'Кузнец'), ('Кожевник', 'Кожевник'), ('Зельевар', 'Зельевар'), ('Мастер заклинаний', 'Мастер заклинаний')], default='Танк', max_length=20)),
                ('subscribers', models.ManyToManyField(blank=True, related_name='categories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
